
>>> !SHARED_OBJECT_DUPLICATE A:
{!SHARED_OBJECT;TEST_SOD_A;[FOO][BAR]}

{!SHARED_OBJECT_DUPLICATE;TEST_SOD_A;TEST_SOD_A2;false}
===
[FOO][BAR]

[FOO][BAR]
<<<

>>> !SHARED_OBJECT_DUPLICATE B:
{!SHARED_INORGANIC;TEST_SOD_B;[FOO][BAR]}

{!SHARED_OBJECT_DUPLICATE;INORGANIC:TEST_SOD_B;INORGANIC:TEST_SOD_B2}
===
[INORGANIC:TEST_SOD_B]
	[FOO][BAR]

[INORGANIC:TEST_SOD_B2]
	[FOO][BAR]
<<<

>>> !SHARED_OBJECT_DUPLICATE C:
{!SHARED_INORGANIC;TEST_SOD_C;[FOO][BAR]}

{!SHARED_OBJECT_DUPLICATE;INORGANIC:TEST_SOD_C;INORGANIC:TEST_SOD_C2}

{#;{@PARSE_TO;TEMP;{@READ_TABLE;Libs/Base:!SHARED_OBJECT_CATEGORY:INORGANIC;INORGANIC:TEST_SOD_C2}}{@IF;$TEMP;t;OK!;ERROR!}}
===
[INORGANIC:TEST_SOD_C]
	[FOO][BAR]

[INORGANIC:TEST_SOD_C2]
	[FOO][BAR]

OK!
<<<

>>> SHARED_OBJECT_KILL_TAG:
{!SHARED_OBJECT;TEST_SOKT;[FOO][BAR][BAZ][TEST:A:B:C][TEST:X:Y:Z][TEST:X]}
{SHARED_OBJECT_KILL_TAG;TEST_SOKT;BAR}
{SHARED_OBJECT_KILL_TAG;TEST_SOKT;TEST:X:Y}
===
[FOO]-BAR-[BAZ][TEST:A:B:C]-TEST:X:Y:Z-[TEST:X]
<<<

>>> SHARED_OBJECT_REPLACE_TAG:
{!SHARED_OBJECT;TEST_SORT;[FOO][BAR][BAZ][TEST:A:B:C][TEST:X:Y:Z][TEST:X]}
{SHARED_OBJECT_REPLACE_TAG;TEST_SORT;BAR;[PUB]}
{SHARED_OBJECT_REPLACE_TAG;TEST_SORT;TEST:X:&;[TEST:M:N:O]}
===
[FOO][PUB][BAZ][TEST:A:B:C][TEST:M:N:O][TEST:X]
<<<

>>> SHARED_OBJECT_MERGE A:
{!SHARED_OBJECT;TEST_SOM_A;[FOO][BAR][BAZ][TEST:A:B:C:D][TEST:X:Y:Z:0][TEST:X]}
{SHARED_OBJECT_MERGE;TEST_SOM_A;$:&:?(1,-1);[TEST:M:N:O:P]}
===
[FOO][BAR][BAZ][TEST:A:N:O:P][TEST:X:N:O:P][TEST:X]
<<<

>>> SHARED_OBJECT_MERGE B:
{!SHARED_OBJECT;TEST_SOM_B;[FOO][BAR][BAZ][TEST:A:B:C][TEST:X:Y:Z][TEST:X]}
{SHARED_OBJECT_MERGE;TEST_SOM_B;$:&:?(1,-1);[TEST:M:N:O]}
===
[FOO][BAR][BAZ][TEST:A:N:O][TEST:X:N:O][TEST:X]
<<<
